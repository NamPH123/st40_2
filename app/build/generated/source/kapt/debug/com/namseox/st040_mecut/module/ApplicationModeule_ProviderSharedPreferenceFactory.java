// Generated by Dagger (https://dagger.dev).
package com.namseox.st040_mecut.module;

import android.content.Context;
import com.namseox.st040_mecut.utils.SharedPreferenceUtils;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApplicationModeule_ProviderSharedPreferenceFactory implements Factory<SharedPreferenceUtils> {
  private final ApplicationModeule module;

  private final Provider<Context> appContextProvider;

  public ApplicationModeule_ProviderSharedPreferenceFactory(ApplicationModeule module,
      Provider<Context> appContextProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public SharedPreferenceUtils get() {
    return providerSharedPreference(module, appContextProvider.get());
  }

  public static ApplicationModeule_ProviderSharedPreferenceFactory create(ApplicationModeule module,
      Provider<Context> appContextProvider) {
    return new ApplicationModeule_ProviderSharedPreferenceFactory(module, appContextProvider);
  }

  public static SharedPreferenceUtils providerSharedPreference(ApplicationModeule instance,
      Context appContext) {
    return Preconditions.checkNotNullFromProvides(instance.providerSharedPreference(appContext));
  }
}
