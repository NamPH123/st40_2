// Generated by Dagger (https://dagger.dev).
package com.namseox.st040_mecut.module;

import android.content.Context;
import com.namseox.st040_mecut.data.repository.VideoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApplicationModeule_ProviderRepositoryFactory implements Factory<VideoRepository> {
  private final ApplicationModeule module;

  private final Provider<Context> contextProvider;

  public ApplicationModeule_ProviderRepositoryFactory(ApplicationModeule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public VideoRepository get() {
    return providerRepository(module, contextProvider.get());
  }

  public static ApplicationModeule_ProviderRepositoryFactory create(ApplicationModeule module,
      Provider<Context> contextProvider) {
    return new ApplicationModeule_ProviderRepositoryFactory(module, contextProvider);
  }

  public static VideoRepository providerRepository(ApplicationModeule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.providerRepository(context));
  }
}
